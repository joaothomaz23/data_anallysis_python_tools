# -*- coding: utf-8 -*-
"""ATV02-JoãoThomazMCSouza.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yt0Sh9M6gQYTlQhFmSwcaUDwmUTZ_2KS
"""

######################################################################################################
# ALUNO : João Thomaz Martins Carvalho Souza
# MATRÍCULA : 2020035264
# TURMA : Física - 2021/1 - Diurno
######################################################################################################

#===================================================================
#                        IMPORTANTE
#  Por favor salvem o Jupyter Notebook como ATV01-FulanoDeTal.ipynb, 
#  onde FulanoDeTal é o seu nome completo e postem em nossa sala de
#  aula no MS Teams até 14:40hs !

# Atividade 1 - Ajuste de uma curva do tipo : y = a * sin(b*x + c)
# Usando curve_fit from Scipy, modifique os exemplos dados na aula anterior 
# para fazer o ajuste pedido
from scipy.optimize import curve_fit
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

def seno(x,a,b,c):
  return a*np.sin(b*x + c) 
x = np.linspace(-10,10,1000)
y = seno(x,1,1,1)
ruido = 0.5*np.random.normal(y)
y = y + ruido  

fig, graf = plt.subplots()
graf.scatter(x,y,color='#00b3b3',label='Dados Experimentais')

popt, pcov =  curve_fit(seno,x,y)
graf.plot(x,seno(x,*popt),linestyle='--', linewidth=2, color='black',label='Ajuste da curva')
graf.set_xlabel("x")
graf.set_ylabel("y")
graf.legend()
graf.set_title('y=a*sen(b*x + c)')

# Atividade 2 - Ajuste de uma curva do tipo : y = a/( (x - b)**2 + c )
# Usando curve_fit from Scipy, modifique os exemplos dados na aula anterior 
# para fazer o ajuste pedido
from scipy.optimize import curve_fit
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

def funcao(x,a,b,c):
  return a /( (x - b)**2 + c )
x = np.linspace(-10,10,1000)
y = funcao(x,1,1,1) 
ruido = 0.06*np.random.normal(y)
y = y + ruido

fig, graf = plt.subplots()
graf.scatter(x,y,color='#00b3b3',label='Dados Experimentais')

popt, pcov =  curve_fit(funcao,x,y)
graf.plot(x,funcao(x,*popt),linestyle='--', linewidth=2, color='black',label='Ajuste da curva')
graf.set_xlabel("x")
graf.set_ylabel("y")
graf.legend()
graf.set_title('a /( (x - b)**2 + c )')

# Atividade 3 - Ajuste de uma curva do tipo : y = a* sin(b*x)*sqrt(x+c)
# Usando curve_fit from Scipy, modifique os exemplos dados na aula anterior 
# para fazer o ajuste pedido
from scipy.optimize import curve_fit
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

def funcao(x,a,b,c):
  return a*np.sin(b*x)*np.sqrt(x + c)
x = np.linspace(-10,10,1000)
y = funcao(x,1,1,1) 
ruido = 0.5*np.random.normal(y)
y = y + ruido

fig, graf = plt.subplots()
graf.scatter(x,y,color='#00b3b3',label='Dados Experimentais')

x = np.nan_to_num(x)
y = np.nan_to_num(y)

popt, pcov = curve_fit(funcao,x,y)
graf.plot(x,funcao(x,*popt),linestyle='--', linewidth=2, color='black',label='Ajuste da curva')
graf.set_xlabel("x")
graf.set_ylabel("y")
graf.legend()
graf.set_title('a*sin(b*x)*sqrt(x+c)')